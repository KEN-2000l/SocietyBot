        if message.author == self.user:
            return
        self.last_message = message

        await self.run_wildcards(message)
        await self.run_commands(message)
        await self.run_adv_commands(message)

        if message.content.startswith(self.PREFIX):
            message_str = clean_message(message)

            if message.author.id in self.WHITELIST:

                if message_str.startswith("setstatus "):
                    pass

                if message_str.startswith("setactivity "):
                    await self.change_presence(activity=discord.Activity(name=removeprefix(message_str, "setactivity "), type=self.activity.type))
                    await self.logm(f"Activity changed to: {removeprefix(message_str, 'setactivity ')}.", tag="Activity")

                if message_str.startswith("setactivitytype "):
                    activity_id = to_int(removeprefix(message_str, "setactivitytype "))
                    if activity_id:
                        await self.change_presence(activity=discord.Activity(name=self.activity.name, type=activity_id))
                        await self.logm(f"Activity Type changed to: {activity_id}.", tag="Activity")
                    else:
                        await message.channel.send("Invalid activity type ID.")

                if message_str == "PREFIX WHITELIST _ ":
                    pass

            if message_str == "help":
                await self.send_help(message.channel)

            if message_str.startswith("memberinfo "):
                member = await self.get_member_from_str(removeprefix(message_str, "memberinfo "))
                if member in self.get_all_members():
                    await message.channel.send(await get_member_profile(member))
                else:
                    await message.channel.send("User not found/not in server.")

            if message_str.startswith("google "):
                await message.channel.send(await google_search(removeprefix(message_str, "google ")))

            if message_str.startswith("! "):
                await emphasize_hook(message)

            if message_str == "PREFIX _":
                pass

        if message.content == "_":
            pass


    async def find_user(self, string: str) -> Optional[discord.Member]:
        string = string.strip()

        user_id = to_int(string)
        user = discord.utils.get(self.get_all_members(), id=user_id)
        if user:
            return user

        user = discord.utils.get(self.get_all_members(), mention=string)
        if user:
            return user

        user = discord.utils.find(lambda u: str(u) == string, self.get_all_members())
        if user:
            return user

        user = discord.utils.get(self.get_all_members(), name=string)
        if user:
            return user

        user = discord.utils.get(self.get_all_members(), nick=string)
        if user:
            return user

        string = string.lower()
        user = discord.utils.find(lambda u: str(u).lower() == string, self.get_all_members())
        if user:
            return user

        user = discord.utils.find(lambda u: u.name.lower() == string, self.get_all_members())
        if user:
            return user

        user = discord.utils.find(lambda u: (u.nick.lower() if u.nick else None) == string, self.get_all_members())
        if user:
            return user

        return None

    async def find_guild(self, string: str) -> Optional[discord.Guild]:
        string = string.strip()

        guild_id = to_int(string)
        guild = discord.utils.get(self.guilds, id=guild_id)
        if guild:
            return guild

        guild = discord.utils.get(self.guilds, name=string)
        if guild:
            return guild

        guild = discord.utils.find(lambda g: g.name.lower() == string.lower(), self.guilds)
        if guild:
            return guild

        return None
